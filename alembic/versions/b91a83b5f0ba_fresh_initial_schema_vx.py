"""fresh_initial_schema_vX

Revision ID: b91a83b5f0ba
Revises: 
Create Date: 2025-05-25 16:31:43.881867

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

# revision identifiers, used by Alembic.
revision = 'b91a83b5f0ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crops',
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name_en', sa.String(length=100), nullable=False),
    sa.Column('name_local', sa.String(length=100), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('attributes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crops_code'), 'crops', ['code'], unique=True)
    op.create_index(op.f('ix_crops_id'), 'crops', ['id'], unique=False)
    op.create_table('currencies',
    sa.Column('code', sa.String(length=3), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_currencies_code'), 'currencies', ['code'], unique=True)
    op.create_index(op.f('ix_currencies_id'), 'currencies', ['id'], unique=False)
    op.create_table('data_quality_flags',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_data_quality_flags_id'), 'data_quality_flags', ['id'], unique=False)
    op.create_table('financial_account_types',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('is_cost', sa.Boolean(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_financial_account_types_id'), 'financial_account_types', ['id'], unique=False)
    op.create_index(op.f('ix_financial_account_types_name'), 'financial_account_types', ['name'], unique=True)
    op.create_table('indicator_categories',
    sa.Column('name_en', sa.String(length=100), nullable=False),
    sa.Column('name_local', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_en')
    )
    op.create_index(op.f('ix_indicator_categories_id'), 'indicator_categories', ['id'], unique=False)
    op.create_table('infrastructure_types',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_infrastructure_types_id'), 'infrastructure_types', ['id'], unique=False)
    op.create_index(op.f('ix_infrastructure_types_name'), 'infrastructure_types', ['name'], unique=True)
    op.create_table('operational_status_types',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_operational_status_types_id'), 'operational_status_types', ['id'], unique=False)
    op.create_index(op.f('ix_operational_status_types_name'), 'operational_status_types', ['name'], unique=True)
    op.create_table('permissions',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.create_table('reporting_unit_types',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reporting_unit_types_id'), 'reporting_unit_types', ['id'], unique=False)
    op.create_index(op.f('ix_reporting_unit_types_name'), 'reporting_unit_types', ['name'], unique=True)
    op.create_table('roles',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('temporal_resolutions',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_temporal_resolutions_id'), 'temporal_resolutions', ['id'], unique=False)
    op.create_table('unit_of_measurements',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('abbreviation', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('abbreviation'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_unit_of_measurements_id'), 'unit_of_measurements', ['id'], unique=False)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('indicator_definitions',
    sa.Column('code', sa.String(length=100), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=False),
    sa.Column('name_local', sa.String(length=255), nullable=True),
    sa.Column('description_en', sa.Text(), nullable=True),
    sa.Column('description_local', sa.Text(), nullable=True),
    sa.Column('data_type', sa.String(length=50), nullable=False),
    sa.Column('unit_of_measurement_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('wa_sheet_reference', sa.String(length=50), nullable=True),
    sa.Column('is_spatial_raster', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['indicator_categories.id'], ),
    sa.ForeignKeyConstraint(['unit_of_measurement_id'], ['unit_of_measurements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indicator_definitions_code'), 'indicator_definitions', ['code'], unique=True)
    op.create_index(op.f('ix_indicator_definitions_id'), 'indicator_definitions', ['id'], unique=False)
    op.create_table('reporting_units',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('area_sqkm', sa.Float(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, spatial_index=True, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('unit_type_id', sa.Integer(), nullable=False),
    sa.Column('parent_unit_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['parent_unit_id'], ['reporting_units.id'], ),
    sa.ForeignKeyConstraint(['unit_type_id'], ['reporting_unit_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reporting_units_code'), 'reporting_units', ['code'], unique=True)
    op.create_index(op.f('ix_reporting_units_id'), 'reporting_units', ['id'], unique=False)
    op.create_index(op.f('ix_reporting_units_name'), 'reporting_units', ['name'], unique=False)
    op.create_index(op.f('ix_reporting_units_parent_unit_id'), 'reporting_units', ['parent_unit_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('cropping_patterns',
    sa.Column('reporting_unit_id', sa.Integer(), nullable=False),
    sa.Column('crop_id', sa.Integer(), nullable=False),
    sa.Column('time_period_year', sa.Integer(), nullable=False),
    sa.Column('time_period_season', sa.String(length=50), nullable=True),
    sa.Column('data_type', sa.String(length=50), nullable=False),
    sa.Column('area_cultivated_ha', sa.Float(), nullable=True),
    sa.Column('area_proposed_ha', sa.Float(), nullable=True),
    sa.Column('yield_actual_ton_ha', sa.Float(), nullable=True),
    sa.Column('yield_proposed_ton_ha', sa.Float(), nullable=True),
    sa.Column('water_allocation_mcm', sa.Float(), nullable=True),
    sa.Column('water_consumed_actual_mcm', sa.Float(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['crop_id'], ['crops.id'], ),
    sa.ForeignKeyConstraint(['reporting_unit_id'], ['reporting_units.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reporting_unit_id', 'crop_id', 'time_period_year', 'time_period_season', 'data_type', name='uq_cropping_pattern_entry')
    )
    op.create_index(op.f('ix_cropping_patterns_id'), 'cropping_patterns', ['id'], unique=False)
    op.create_table('infrastructures',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('infrastructure_type_id', sa.Integer(), nullable=False),
    sa.Column('reporting_unit_id', sa.Integer(), nullable=True),
    sa.Column('operational_status_id', sa.Integer(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(srid=4326, spatial_index=True, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('capacity', sa.Float(), nullable=True),
    sa.Column('capacity_unit_id', sa.Integer(), nullable=True),
    sa.Column('attributes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['capacity_unit_id'], ['unit_of_measurements.id'], ),
    sa.ForeignKeyConstraint(['infrastructure_type_id'], ['infrastructure_types.id'], ),
    sa.ForeignKeyConstraint(['operational_status_id'], ['operational_status_types.id'], ),
    sa.ForeignKeyConstraint(['reporting_unit_id'], ['reporting_units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_infrastructures_id'), 'infrastructures', ['id'], unique=False)
    op.create_index(op.f('ix_infrastructures_name'), 'infrastructures', ['name'], unique=False)
    op.create_table('raster_metadatas',
    sa.Column('layer_name_geoserver', sa.String(length=255), nullable=False),
    sa.Column('geoserver_workspace', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('indicator_definition_id', sa.Integer(), nullable=False),
    sa.Column('timestamp_valid_start', sa.DateTime(), nullable=False),
    sa.Column('timestamp_valid_end', sa.DateTime(), nullable=True),
    sa.Column('spatial_resolution_desc', sa.String(length=100), nullable=True),
    sa.Column('storage_path_or_postgis_table', sa.String(length=512), nullable=False),
    sa.Column('default_style_name', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['indicator_definition_id'], ['indicator_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_raster_metadatas_id'), 'raster_metadatas', ['id'], unique=False)
    op.create_index(op.f('ix_raster_metadatas_indicator_definition_id'), 'raster_metadatas', ['indicator_definition_id'], unique=False)
    op.create_index(op.f('ix_raster_metadatas_layer_name_geoserver'), 'raster_metadatas', ['layer_name_geoserver'], unique=True)
    op.create_table('financial_accounts',
    sa.Column('reporting_unit_id', sa.Integer(), nullable=True),
    sa.Column('infrastructure_id', sa.Integer(), nullable=True),
    sa.Column('financial_account_type_id', sa.Integer(), nullable=False),
    sa.Column('crop_id', sa.Integer(), nullable=True),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_document_ref', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['crop_id'], ['crops.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], ),
    sa.ForeignKeyConstraint(['financial_account_type_id'], ['financial_account_types.id'], ),
    sa.ForeignKeyConstraint(['infrastructure_id'], ['infrastructures.id'], ),
    sa.ForeignKeyConstraint(['reporting_unit_id'], ['reporting_units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_financial_accounts_id'), 'financial_accounts', ['id'], unique=False)
    op.create_table('indicator_timeserieses',
    sa.Column('reporting_unit_id', sa.Integer(), nullable=True),
    sa.Column('infrastructure_id', sa.Integer(), nullable=True),
    sa.Column('indicator_definition_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('value_numeric', sa.Float(), nullable=True),
    sa.Column('value_text', sa.String(length=255), nullable=True),
    sa.Column('temporal_resolution_id', sa.Integer(), nullable=True),
    sa.Column('quality_flag_id', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['indicator_definition_id'], ['indicator_definitions.id'], ),
    sa.ForeignKeyConstraint(['infrastructure_id'], ['infrastructures.id'], ),
    sa.ForeignKeyConstraint(['quality_flag_id'], ['data_quality_flags.id'], ),
    sa.ForeignKeyConstraint(['reporting_unit_id'], ['reporting_units.id'], ),
    sa.ForeignKeyConstraint(['temporal_resolution_id'], ['temporal_resolutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indicator_timeserieses_id'), 'indicator_timeserieses', ['id'], unique=False)
    op.create_index(op.f('ix_indicator_timeserieses_indicator_definition_id'), 'indicator_timeserieses', ['indicator_definition_id'], unique=False)
    op.create_index(op.f('ix_indicator_timeserieses_infrastructure_id'), 'indicator_timeserieses', ['infrastructure_id'], unique=False)
    op.create_index(op.f('ix_indicator_timeserieses_reporting_unit_id'), 'indicator_timeserieses', ['reporting_unit_id'], unique=False)
    op.create_index(op.f('ix_indicator_timeserieses_timestamp'), 'indicator_timeserieses', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name=op.f('spatial_ref_sys_srid_check')),
    sa.PrimaryKeyConstraint('srid', name=op.f('spatial_ref_sys_pkey'))
    )
    op.drop_index(op.f('ix_indicator_timeserieses_timestamp'), table_name='indicator_timeserieses')
    op.drop_index(op.f('ix_indicator_timeserieses_reporting_unit_id'), table_name='indicator_timeserieses')
    op.drop_index(op.f('ix_indicator_timeserieses_infrastructure_id'), table_name='indicator_timeserieses')
    op.drop_index(op.f('ix_indicator_timeserieses_indicator_definition_id'), table_name='indicator_timeserieses')
    op.drop_index(op.f('ix_indicator_timeserieses_id'), table_name='indicator_timeserieses')
    op.drop_table('indicator_timeserieses')
    op.drop_index(op.f('ix_financial_accounts_id'), table_name='financial_accounts')
    op.drop_table('financial_accounts')
    op.drop_index(op.f('ix_raster_metadatas_layer_name_geoserver'), table_name='raster_metadatas')
    op.drop_index(op.f('ix_raster_metadatas_indicator_definition_id'), table_name='raster_metadatas')
    op.drop_index(op.f('ix_raster_metadatas_id'), table_name='raster_metadatas')
    op.drop_table('raster_metadatas')
    op.drop_index(op.f('ix_infrastructures_name'), table_name='infrastructures')
    op.drop_index(op.f('ix_infrastructures_id'), table_name='infrastructures')
    op.drop_table('infrastructures')
    op.drop_index(op.f('ix_cropping_patterns_id'), table_name='cropping_patterns')
    op.drop_table('cropping_patterns')
    op.drop_table('user_roles')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_reporting_units_parent_unit_id'), table_name='reporting_units')
    op.drop_index(op.f('ix_reporting_units_name'), table_name='reporting_units')
    op.drop_index(op.f('ix_reporting_units_id'), table_name='reporting_units')
    op.drop_index(op.f('ix_reporting_units_code'), table_name='reporting_units')
    op.drop_table('reporting_units')
    op.drop_index(op.f('ix_indicator_definitions_id'), table_name='indicator_definitions')
    op.drop_index(op.f('ix_indicator_definitions_code'), table_name='indicator_definitions')
    op.drop_table('indicator_definitions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_unit_of_measurements_id'), table_name='unit_of_measurements')
    op.drop_table('unit_of_measurements')
    op.drop_index(op.f('ix_temporal_resolutions_id'), table_name='temporal_resolutions')
    op.drop_table('temporal_resolutions')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_reporting_unit_types_name'), table_name='reporting_unit_types')
    op.drop_index(op.f('ix_reporting_unit_types_id'), table_name='reporting_unit_types')
    op.drop_table('reporting_unit_types')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_operational_status_types_name'), table_name='operational_status_types')
    op.drop_index(op.f('ix_operational_status_types_id'), table_name='operational_status_types')
    op.drop_table('operational_status_types')
    op.drop_index(op.f('ix_infrastructure_types_name'), table_name='infrastructure_types')
    op.drop_index(op.f('ix_infrastructure_types_id'), table_name='infrastructure_types')
    op.drop_table('infrastructure_types')
    op.drop_index(op.f('ix_indicator_categories_id'), table_name='indicator_categories')
    op.drop_table('indicator_categories')
    op.drop_index(op.f('ix_financial_account_types_name'), table_name='financial_account_types')
    op.drop_index(op.f('ix_financial_account_types_id'), table_name='financial_account_types')
    op.drop_table('financial_account_types')
    op.drop_index(op.f('ix_data_quality_flags_id'), table_name='data_quality_flags')
    op.drop_table('data_quality_flags')
    op.drop_index(op.f('ix_currencies_id'), table_name='currencies')
    op.drop_index(op.f('ix_currencies_code'), table_name='currencies')
    op.drop_table('currencies')
    op.drop_index(op.f('ix_crops_id'), table_name='crops')
    op.drop_index(op.f('ix_crops_code'), table_name='crops')
    op.drop_table('crops')
    # ### end Alembic commands ###
